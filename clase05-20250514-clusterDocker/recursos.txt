Encuesta presentación alumnos:
https://forms.gle/5qkfTtDnA78DKVxX6

Repositorio material clases:
https://github.com/diegopolverelli/comision-70465-backend

Repo proyecto final:
https://github.com/CoderContenidos/RecursosBackend-Adoptme

https://ai.google.dev/
https://ai.google.dev/gemini-api/docs?hl=es-419

PM2 - monitor:
https://pm2.keymetrics.io/

Jest:
https://jestjs.io/es-ES/

Mocha:
https://mochajs.org/


https://www.flickr.com/

String de conexión a MongoDB Atlas
MONGO_URL=mongodb+srv://coderhouse:codercoder2023@cluster0.wpxpupc.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0

Playlist clase (fundamental...!!!):
https://open.spotify.com/playlist/5GX2x4fbBnJKRO0qsg2Gm8?si=ec273740e52b473e

export const TIPOS_ERROR={
    TIPO_DE_DATOS: 400, 
    ARGUMENTOS_INVALIDOS: 400, 
    AUTENTICACION: 401, 
    AUTORIZACION: 403, 
    NOT_FOUND: 404, 
    INTERNAL_SERVER_ERROR: 500
}


// ******************************************
artillery quick -c 20 -n 40 http://localhost:3000/op1 -o resultadoOP1.json 
artillery report resultadoOP1.json -o informe.html

// ******************************************
taskkill /pid  PID -f           (elimina una tarea, por nro de proceso del task manager)
tasklist /fi “imagename eq node.exe”   (filtra tarea segun criterio: nombre imagen en este caso)

// ******************************************
npm i express-async-errors
import "express-async-errors"
require('express-async-errors')


// ******************************************
nvm:
// ******************************************
node --watch --env-file ./src/.env ./src/app

// ******************************
npm:
// ******************************
https://docs.npmjs.com/creating-and-publishing-scoped-public-packages

npm login
npm version patch
npm publish
npm list express  (muestra la versión que tenemos instalada)
npm list --depth=3  (muestra la version instalada, y sus dependencias)
npm info    (muestra la version de internet de un paquete)
npm view    (muestra la version de internet de un paquete)


// ****************************
Yarn:
// ****************************
corepack enable
yarn init -2 (nuevas versiones) o yarn init -1 (versión vieja)
yarn set version stable
yarn install

En modo pnp (por defecto), para ejecutar node debo hacerlo vía 
scripts start o dev, configurados en el package.json

Despues, si quiero trabajar con los node-modules (sin pnp), crear 
el archivo .yarnrc.yml, que incluya la linea:
nodeLinker: node-modules

nodeLinker: pnp   (para que funcione sin los node_modules)
// ****************************

